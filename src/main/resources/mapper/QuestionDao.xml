<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="top.javahai.chatroom.dao.QuestionDao">

    <!-- 通过ID查询单条数据 -->
    <select id="queryById" resultType="top.javahai.chatroom.entity.Question" parameterType="int">
        SELECT id, content, user_id AS userId, create_time AS createTime
        FROM question
        WHERE id = #{id}
    </select>

    <!-- 查询指定行数据 -->
    <select id="queryAllByLimit" resultType="top.javahai.chatroom.entity.Question">
        SELECT id, content, user_id AS userId, create_time AS createTime
        FROM question
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 通过实体作为筛选条件查询 -->
    <select id="queryAll" parameterType="top.javahai.chatroom.entity.Question" resultType="top.javahai.chatroom.entity.Question">
        SELECT id, content, user_id AS userId, create_time AS createTime
        FROM question
        <where>
            <if test="id != null">
                AND id = #{id}
            </if>
            <if test="content != null">
                AND content = #{content}
            </if>
            <if test="userId != null">
                AND user_id = #{userId}
            </if>
            <if test="createTime != null">
                AND create_time = #{createTime}
            </if>
        </where>
    </select>

    <!-- 新增数据 -->
    <insert id="insert" parameterType="top.javahai.chatroom.entity.Question" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO question (content, user_id, create_time)
        VALUES (#{content}, #{userId}, NOW())
    </insert>

    <!-- 修改数据 -->
    <update id="update" parameterType="top.javahai.chatroom.entity.Question">
        UPDATE question
        <set>
            <if test="content != null">
                content = #{content},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="finished != null">
                finished = #{finished},
            </if>
        </set>
        WHERE id = #{id}
    </update>

    <!-- 通过主键删除数据 -->
    <delete id="deleteById" parameterType="int">
        DELETE FROM question WHERE id = #{id}
    </delete>

    <!-- 获取问题总数 -->
    <select id="getTotal" resultType="java.lang.Long">
        SELECT COUNT(*) FROM question
    </select>

    <!-- 分页查询并排序 -->
    <select id="queryByPage" resultType="top.javahai.chatroom.entity.Question">
        WITH T AS (
            SELECT 
                question_id, 
                COUNT(id) AS answerCount
            FROM 
                answer
            GROUP BY 
                question_id
        )
        SELECT 
            q.id, 
            q.content, 
            q.user_id AS userId, 
            q.create_time AS createTime
        FROM 
            question q
        LEFT JOIN 
            T ON q.id = T.question_id
        GROUP BY 
            q.id, q.content, q.user_id, q.create_time
        ORDER BY 
            T.answerCount ASC,
            q.create_time DESC
        LIMIT #{size} OFFSET #{offset}
    </select>

</mapper>